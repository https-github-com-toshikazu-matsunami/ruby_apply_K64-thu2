require_relative '日本語'

def ビンゴの整数の配列(始める, 終わり)
  配列 = 空の配列
  (始める..終わり).each{ |数| 配列.押す(数) }
  return 配列.シャッフル.values_at(零, 一, 二, 三, 四)
end

class Bingo
  # attr_accessor :ビー, :アイ, :エヌ, :ジー, :オー

  def initialize
    @ビー = ビンゴの整数の配列(一, 十五)
    @アイ = ビンゴの整数の配列(十六, 三十)
    @エヌ = ビンゴの整数の配列(三十一, 四十五)
    @ジー = ビンゴの整数の配列(四十六, 六十)
    @オー = ビンゴの整数の配列(六十一, 七十五)
  end

  def ビンゴの列(数)
    return "%2d | #{@アイ[数]} |    | #{@ジー[数]} | #{@オー[数]}" % @ビー[数] unless 数 != 二
    return "%2d | #{@アイ[数]} | #{@エヌ[数]} | #{@ジー[数]} | #{@オー[数]}" % @ビー[数]
  end

end

ビンゴ = Bingo.new
䛿改行ありで出力(" B |  I |  N |  G |  O")
(零..四).each{ |数| 䛿改行ありで出力(ビンゴ.ビンゴの列(数)) }